%%
\ProvidesFile{gbudf.bbx}[2016/12/07 v1.0e biblatex bibliography style]

%=====================================================================
%加载标准样式
\RequireBibliographyStyle{numeric-comp}
\RequireBibliographyStyle{standard}

%=====================================================================
%增加一些功能函数
\providetoggle{ifCJKforgbt} %定义判断中文字符的函数，用于判断作者等信息是否由中文字符构成
\def\testCJKfirstchar#1#2&{%
\ifnumgreater{`#1}{"2E7F}{\toggletrue{ifCJKforgbt}}{\togglefalse{ifCJKforgbt}}}%
\def\testCJKfirst#1{%
\edef\tempa{#1}%
\expandafter\testCJKfirstchar\tempa&}

\providetoggle{ifnoteeqstandard} %判断是否是标准
\def\testifnoteeqstd{%
\iffieldundef{note}{\togglefalse{ifnoteeqstandard}}%判断一下，是否是标准
        {\def\comparetmp{standard}\edef\comparetmpb{\thefield{note}}%
        \ifx\comparetmp\comparetmpb%
        \toggletrue{ifnoteeqstandard}%
        \else%
        \togglefalse{ifnoteeqstandard}%
        \fi}}

\def\multivolumeparsetoparts#1/#2{\def\multivolumefirst{#1}\def\multivolumesecond{#2}}%用于解析连续出版物，2个卷期的情况

\def\gbt@parse@range#1{%%这里利用李志奇的范围数据解析函数，修改后用来处理卷volume的范围。
    \edef\gbt@tmpa{#1}%
    \expandafter\gbt@parse@rangei\gbt@tmpa-\@empty}
\def\gbt@parse@rangei#1-#2\@empty{%
    \global\def\gbt@range@first{#1}%
    \def\gbt@tmpa{#2}%
    \ifx\gbt@tmpa\@empty%
        \global\def\gbt@range@second{}%
    \else%
        \gbt@parse@rangeii#2\@empty%
    \fi}
\def\gbt@parse@rangeii#1-#2\@empty{%
    \def\gbt@tmpa{#2}%
    \ifx\gbt@tmpa\@empty%
        \global\def\gbt@range@second{#1}%
    \else%
        \gbt@parse@rangeii#2\@empty%
    \fi}

\def\multinumberparser#1{%%这里写的number的解析函数，与上面的是类似的。
    \edef\gbnumbertmp{#1}%
    \expandafter\multinumberparsetoparts\gbnumbertmp-\@empty}
\def\multinumberparsetoparts#1-#2\@empty{%
    \def\multinumberfirst{#1}%
    \def\gbnumbertmp{#2}%
    \ifx\gbnumbertmp\@empty%
        \def\multinumbersecond{}%
    \else%
        \multinumberparsetopartsb#2\@empty%
    \fi}
\def\multinumberparsetopartsb#1-#2\@empty{%
    \def\gbnumbertmp{#2}%
    \ifx\gbnumbertmp\@empty%
        \def\multinumbersecond{#1}%
    \else%
        \multinumberparsetopartsb#2\@empty%
    \fi}


%=====================================================================
%设置宏包选项
\ExecuteBibliographyOptions{
  sorting=none,
  useprefix=true,  %名字的信息包括前缀
  %firstinits=true,    %名字有缩写，参考3.1.2.3 Internal
  giveninits=true,
  date         = year,  %日期仅写到年
  maxnames     = 3 ,    %设置名字最大数量
  minnames     = 3       %设置缩减后的名字最小数量
  %uniquename   = init
}


%=====================================================================
%设置本地化字符串
\NewBibliographyString{andotherscn}%新建一个当地化字符串，用来记录“等”字符
\NewBibliographyString{noaddress}
\NewBibliographyString{nopublisher}
\DefineBibliographyStrings{english}{%直接利用当地化格式english进行修改一些中文的格式，
bibliography     = {参考文献},
references       = {参考文献},
bytranslator= {\addcomma\ 译},%\addperiod
and         = {\addcomma},%将第2和3人名见的and符号改成 逗号，用\finalnamedelim命令也可以定义，参见3.9.1节
%andothers   = {et al.},        %将超过3个人名的省略，et al.改成为 等
andotherscn   = {等},        %将超过3个人名的省略，et al.改成为 等
noaddress = {[S.l.]},
nopublisher = {[s.n.]},
backrefpage      = {引用页:},
backrefpages     = {引用页:},
}


%=====================================================================
%动态数据修改，修改输入的源文件数据，用于中文判断等
\DeclareSourcemap{%首先把作者和译者信息准确的记录到userf，usere中，用于判断是否是cjk字符。
\maps[datatype=bibtex]{%注意\DeclareSourcemap命令只能出现一次
\map{ %增加文献标识符如[M],[J]等，下面首先生成这一信息
%使用下面biber动态修改bbl文件的方法是正确的
            %\perdatasource{examples.bib}
            \pertype{article}
            \pertype{periodical}
            \step[fieldset=usera, fieldvalue={J}]
            }
        \map{
            \pertype{book}
            \pertype{inbook}
            \step[fieldset=usera, fieldvalue={M}]
            }
        \map{
            \pertype{patent}
            \step[fieldset=usera, fieldvalue={P}]
            }
        \map{
            \pertype{inproceedings}
            \pertype{conference}
            \step[fieldset=usera, fieldvalue={C}]
            \step[fieldsource=institution] %有时会把version和edition混淆，这里处理后就没有这个问题，可以直接用version
            \step[fieldset=publisher, origfieldval]
            \step[fieldsource=editor] %
            \step[fieldset=bookauthor, origfieldval]
            }
        \map{
            \pertype{proceedings}
            \step[fieldset=usera, fieldvalue={C}]
            \step[fieldsource=institution] %有时会把version和edition混淆，这里处理后就没有这个问题，可以直接用version
            \step[fieldset=publisher, origfieldval]
            \step[fieldsource=editor] %有的时候可能只填写了编者，没有author，把它复制一下
            \step[fieldset=author, origfieldval]
            }
        \map{
            \pertype{report}
            \step[fieldset=usera, fieldvalue={R}]
            }
        \map{
            \pertype{thesis}
            \step[fieldset=usera, fieldvalue={D}]
            }
        \map{
            \pertype{online}
            \step[fieldset=usera, fieldvalue={EB}]
            }
        \map{
            \pertype{manual}
            \step[fieldset=usera, fieldvalue={A}]
            \step[fieldsource=edition] %有时会把version和edition混淆，这里处理后就没有这个问题，可以直接用version
            \step[fieldset=version, origfieldval]
            \step[fieldsource=organization]%因为用的report的驱动，所以需要institution域，也把organization转成它，这样增大兼容性
            \step[fieldset=institution, origfieldval]
            }
        \map{
            \pertype{incollection}
            \step[fieldset=usera, fieldvalue={G}]
            }
        \map{
            \pertype{collection}
            \step[fieldset=usera, fieldvalue={G}]
            \step[fieldsource=editor] %%有的时候可能只填写了编者，没有author，把它复制一下
            \step[fieldset=author, origfieldval]
            }
        \map{
            \pertype{unpublished}
            \step[fieldset=usera, fieldvalue={Z}]
            }
        \map{
            \step[fieldsource=author]
            \step[fieldset=userf, origfieldval]
            \step[fieldsource=translator]
            \step[fieldset=usere, origfieldval]
            \step[fieldsource=year]
            \step[fieldset=date, origfieldval]
            }
        \map{%将entrykey放入keywords中用于后期的使用
            \step[fieldsource=entrykey]
            \step[fieldset=keywords, origfieldval]
            }
        \map[overwrite]{%这里还必须有overwrite，怎么之前会觉得没有问题呢，可能是之前版本拷错了，还是之前是texlive2015变16后biber有了变化(2016-1207修改正确)
            \step[fieldsource=note, final]%将note域信息复制给keywords，用于输出时容易区分标准和报纸
            \step[fieldset=keywords, fieldvalue={,}, append]
            \step[fieldset=keywords, origfieldval, append]
            }
}
}


%=====================================================================
%设置单元或块等的标点
\renewrobustcmd*{\bibinitperiod}{}%将名字简写后的点去掉
\renewcommand*{\revsdnamepunct}{}
\renewcommand*{\subtitlepunct}{\addcolon\space} %修改标题和其它标题信息间的标点
\renewcommand*{\entrysetpunct}{\adddot\par\nobreak}%这里调整一下两种语言参考文献的间隔
\renewcommand*{\newblockpunct}{\par\nobreak}
\renewcommand*{\bibpagespunct}{\addcolon\space}%修改为用冒号，%页码引用格式的修改

%=====================================================================
%修改域的格式
\DeclareFieldFormat{labelnumberwidth}{\mkbibbrackets{#1}\hfill}%修改序号标签格式为左对齐
\DeclareFieldFormat{title}{\texttt{#1}\adddot\addthinspace}%重设title的输出格式，不加emph，原格式来自biblatex.def文件
\DeclareFieldFormat{journaltitle}{\itshape#1\isdot}% \textit，sl，emph-楷体，\textbf，sf-黑体，\texttt-仿宋，\textsc，md，up-宋体
\DeclareFieldFormat{issuetitle}{\itshape#1}
\DeclareFieldFormat{maintitle}{\itshape#1}
\DeclareFieldFormat{booktitle}{\itshape#1}
\DeclareFieldFormat%将期刊等文献的标题中原来带的引号去掉
  [article,patent,thesis,unpublished]
  {title}{\texttt{#1}\adddot\addthinspace}%
\DeclareFieldFormat%将期刊等文献的标题中原来带的引号去掉
  [inbook,incollection,inproceedings]
  {title}{\texttt{#1}\nopunct\unspace}%

\DeclareFieldFormat{gbtypeflag}{%%新增文献类型标识符的格式
\iffieldundef{url}%当存在url时，增加一个OL标识符
{\nobreak\printtext{[}\nobreak#1\nobreak\printtext{]}}%
{\nobreak\printtext{[}\nobreak#1\nobreak\printtext{\texttt{/}OL]}}%
}
\DeclareFieldFormat{gbtypeflagn}{%用于报纸newspaper
\iffieldundef{url}%当存在url时，增加一个OL标识符
{\nobreak\printtext{[}\nobreak N\printtext{]}\nobreak}%
{\nobreak\printtext{[}\nobreak N\printtext{\texttt{/}OL]}\nobreak}%
}
\DeclareFieldFormat{gbtypeflags}{%用于报纸newspaper
\iffieldundef{url}%当存在url时，增加一个OL标识符
{\nobreak\printtext{[}\nobreak S\printtext{]}\nobreak}%
{\nobreak\printtext{[}\nobreak S\printtext{\texttt{/}OL]}\nobreak}%
}

\DeclareListFormat{publisher}{\itshape%%重设出版社格式，加\itshape
  \usebibmacro{list:delim}{#1}%
  #1\isdot
  \usebibmacro{list:andothers}}

\DeclareListFormat{location}{\itshape%%重设出版地格式，加\itshape
  \usebibmacro{list:delim}{#1}%
  #1\isdot
  \usebibmacro{list:andothers}}

\DeclareFieldFormat{dropout}{\kaishu{#1}}%新建一个域格式用于信息缺失需补充的内容的格式，比如出版信息缺失的补充
\DeclareFieldFormat{titlecase}{\MakeCapital#1}%重设标题格式，将其修改为首字母大写
\DeclareFieldFormat{url}{\url{#1}} %url域修改如本行
\DeclareFieldFormat{pages}{#1}%去掉前面引导页码的pp.等字符%页码引用格式的修改

\renewbibmacro*{name:given-family}[4]{\bfseries%重定义定义given-family，并且使用粗体
  \ifuseprefix
    {\usebibmacro{name:delim}{#3#1}%
     \usebibmacro{name:hook}{#3#1}%
     \ifdefvoid{#3}{}{%
       \ifcapital
         {\mkbibnameprefix{\MakeCapital{#3}}\isdot}
         {\mkbibnameprefix{#3}\isdot}%
       \ifprefchar{}{\bibnamedelimc}}%
     \ifdefvoid{#2}{\mkbibnamefamily{\MakeCapital{#1}}}{\mkbibnamefamily{\MakeUppercase{#1}}}\isdot
     \ifdefvoid{#2}{}{\revsdnamepunct\bibnamedelimd\mkbibnamegiven{\MakeUppercase{#2}}\isdot}%\MakeCapital
     \ifdefvoid{#4}{}{\bibnamedelimd\mkbibnamesuffix{#4}\isdot}}
    {\usebibmacro{name:delim}{#1}%
     \usebibmacro{name:hook}{#1}%
     \ifdefvoid{#2}{\mkbibnamefamily{\MakeCapital{#1}}}{\mkbibnamefamily{\MakeUppercase{#1}}}\isdot
     %
     \ifboolexpe{%
       test {\ifdefvoid{#2}}
       and
       test {\ifdefvoid{#3}}}
       {}
       {\revsdnamepunct}%
     \ifdefvoid{#2}{}{\bibnamedelimd\mkbibnamegiven{\MakeUppercase{#2}}\isdot}%\MakeCapital
     \ifdefvoid{#3}{}{\bibnamedelimd\mkbibnameprefix{#3}\isdot}
     \ifdefvoid{#4}{}{\bibnamedelimd\mkbibnamesuffix{#4}\isdot}}}

\renewbibmacro*{bytranslator+others}{%%修改译者位置格式，bytranslator+others原格式来自biblatex.def文件
  \ifnameundef{translator}
    {}
    {%\usebibmacro{bytranslator+othersstrg}
     %\setunit{\addspace}%
     \printnames[bytranslator]{translator}%
     \clearname{translator}%
     \usebibmacro{bytranslator+othersstrg}%“译”的位置换到下面来，即放到译者后面。
     \setunit*{\addspace}%
     \newunit}%
  \usebibmacro{withothers}}

\renewbibmacro*{name:andothers}{%%判断作者或译者是否中文，若中文用字符等，否则用etcl。
  \ifboolexpr{%
    test {\ifnumequal{\value{listcount}}{\value{liststop}}}
    and
    test \ifmorenames
  }%
    {%这里做一个判断是在处理author还是translator用于两者是不同语言的情况
    \ifcurrentname{translator}{\testCJKfirst{\thefield{usere}}}{\testCJKfirst{\thefield{userf}}}%
    %这句判断如果放到\andothersdelim后面会在等或etc.前增加一个空格，所以放前面
    \ifnumgreater{\value{liststop}}{1}%
       {\finalandcomma}%
       {\finalandcomma}%biblatex作者要区别单作者加等的情况，这里为符合gbt7714-2015第7.2节的要求加上了逗号。
\andothersdelim\iftoggle{ifCJKforgbt}{\bibstring{andotherscn}}{\bibstring{andothers}}%
%\andothersdelim\bibstring{andotherscn}
}%
{}}

\renewbibmacro*{title}{%%重设title的输出，将文献类型标识符输出出去，原输出来自biblatex.def文件
  \ifboolexpr{%
    test{\iffieldundef{title}}%
    and%
    test{\iffieldundef{subtitle}}%
  }%
    {}%
    {\printtext[title]{%
       \printfield[titlecase]{title}%
       \ifboolexpr{test {\iffieldundef{subtitle}}}%这里增加了对子标题的判断，解决不判断多一个点的问题
       {}{\setunit{\subtitlepunct}%
       \printfield[titlecase]{subtitle}}%
       \iffieldundef{titleaddon}{}%判断一下titleaddon，否则直接加可能多一个空格
        {\setunit{\subtitlepunct}\printfield{titleaddon}}%
         \iffieldundef{note}{\printfield[gbtypeflag]{usera}}%在标题后直接给出文献标识字母，判断一下，是否是报纸和标准
        {\def\comparetmp{news}\def\comparetmpa{standard}\edef\comparetmpb{\thefield{note}}%
        \ifx\comparetmp\comparetmpb%判断是否为报纸
        \printfield[gbtypeflagn]{usera}%
        \else%
            \ifx\comparetmpa\comparetmpb%判断是否为标准
            \printfield[gbtypeflags]{usera}%
            \else%
            \printfield[gbtypeflag]{usera}%
            \fi%
        \fi%
        }%
     %\iffieldundef{booktitle}{\newunit}{}%当title是析出时，不要标点
     %\newunit
     }%
}%
}

\renewbibmacro*{url+urldate}{%
  %\usebibmacro{url}%%更换url的位置，放到下面
  \iffieldundef{urlyear}%
    {}{%\setunit*{\addspace}%
    \usebibmacro{urldate}}%
     \setunit{\addperiod\addspace}%
     \usebibmacro{url}}

\renewbibmacro*{url}{\printfield{url}}
%\newbibmacro*{urldate}{\printurldate} %引用时间修改如下一行，即带方括号
\renewbibmacro*{urldate}{%
%\iffieldundef{year}{}{\nopunct}%%这里增加了这一句是为了把year后直接跟urlyear中间的点去掉。这已经没有必要了在driver中去掉点了。
\addspace\printtext{[}\printfield{urlyear}\bibrangedash\printfield{urlmonth}\bibrangedash\printfield{urlday}\printtext{]}}
\newbibmacro*{newsdate}{%%新增加一个新闻日期
\iffieldundef{year}{}{\printfield{year}%
\iffieldundef{month}{}{\bibrangedash\printtext{\thefield{month}}%
\iffieldundef{day}{}{\bibrangedash\printfield{day}}}}%
}
\newbibmacro*{modifydate}{%新增加一个带括号的日期，用于表示表示电子资源的更新和修改日期，而公告日期安按日期格式
\printtext{%
\iffieldundef{year}{}{\mkbibparens{\printtext{\printfield{year}}%
\iffieldundef{month}{}{\bibrangedash\thefield{month}}%
\iffieldundef{day}{}{\bibrangedash\printfield{day}}}}%
}}%

\renewbibmacro*{doi+eprint+url}{%%因为页码后面直接跟引用日期，没有标点所以去掉其中的标点。
%  \iftoggle{bbx:doi}%把doi的位置放到url后面
%    {\printfield{doi}}
%    {}%
  %\newunit\newblock
  \iftoggle{bbx:eprint}
    {\usebibmacro{eprint}}
    {}%
  %\newunit\newblock
  \iftoggle{bbx:url}
    {\usebibmacro{url+urldate}}
    {}
  \newunit%\newblock
  \iftoggle{bbx:doi}
    {\printfield{doi}}
    {}}

\renewbibmacro*{chapter+pages}{%
  \printfield{chapter}%
  \iffieldundef{pages}{}{%这里增加一个判断，当没有页码时就不输出
  \setunit{\bibpagespunct}%
  \printfield{pages}}%
  %\newunit %这里的标点去掉
}

\renewbibmacro*{publisher+location+date}{%%出版社和地址的处理，当没有出版社地址时的判断处理
\testCJKfirst{\thefield{title}}%
\testifnoteeqstd%
\iflistundef{location}{%\adddot
\iftoggle{ifnoteeqstandard}{}{%
\iftoggle{ifCJKforgbt}{\printtext[dropout]{[出版地不详]}\addcolon\addspace}{\printtext[dropout]{[S.l.\adddot]}\addcolon\addspace}}}%  \bibstring{noaddress}
{\printlist{location}\addcolon\addspace}%
%\addcolon\addspace%
\iflistundef{publisher}{%
\iftoggle{ifnoteeqstandard}{}{%
\iftoggle{ifCJKforgbt}{\printtext[dropout]{[出版者不详]}\setunit{\adddot\addspace}\setunit*{\addcomma\addspace}}%
{\printtext[dropout]{\mkbibbrackets{s.n.}}\setunit{\adddot\addspace}\setunit*{\addcomma\addspace}}}}%
{\printlist{publisher}\setunit*{\addcomma\addspace}}%
%\addcomma\addspace%
\usebibmacro{date}%
  %\newunit %去掉这个标点
}

\DeclareFieldFormat{edition}{%%对版本信息做出修改，源来自biblatex.DEF
\testCJKfirst{\thefield{title}}%
\iftoggle{ifCJKforgbt}%
{\ifinteger{#1}%
{\printtext{#1版}}%
{#1\isdot}}%
{\ifinteger{#1}%
{\mkbibordedition{#1}~\bibstring{edition}}%
{#1\isdot}}}

\DeclareFieldFormat{version}{%%对version的版本信息做出修改，源来自biblatex.DEF
\testCJKfirst{\thefield{title}}%
\ifinteger{#1}%
{\iftoggle{ifCJKforgbt}{\printtext{#1版}}%
{\mkbibordedition{#1}~\bibstring{version}}}%
{#1\isdot}}

\renewbibmacro*{journal+issuetitle}{%%调整期刊名的格式，源来自standard.bbx
  \usebibmacro{journal}%
  %\setunit*{\addspace}%
  \setunit*{\addcomma\addspace}%修改为增加一个逗号
  \iffieldundef{series}
    {}
    {\newunit
     \printfield{series}%
     \setunit{\addspace}}%
  %\usebibmacro{volume+number+eid}%
  %\setunit{\addspace}%
  \usebibmacro{issue+date}%
  %\setunit{\addcolon\space}%
  \iffieldundef{volume}{}{\setunit{\addcomma\space}}%
  %换成逗号和空格
  \usebibmacro{issue}%
  \usebibmacro{volume+number+eid}%把卷期放到年份后面
  %\newunit
  }

\renewbibmacro*{issue+date}{%%调整期刊年份的格式，去掉括号
  \printtext{%去掉了[parens]
    \iffieldundef{issue}
      {%\usebibmacro{date}
        \iffieldundef{note}{\usebibmacro{date}}%判断一下，是否是报纸
        {\def\comparetmp{news}\edef\comparetmpb{\thefield{note}}%
        \ifx\comparetmp\comparetmpb%
        \usebibmacro{newsdate}%
        \else%
        \usebibmacro{date}%
        \fi}%
      }
      {\printfield{issue}%
       \setunit*{\addspace}%
       %\usebibmacro{date}
         \iffieldundef{note}{\usebibmacro{date}}%判断一下，是否是报纸
        {\def\comparetmp{news}\edef\comparetmpb{\thefield{note}}%
        \ifx\comparetmp\comparetmpb%
        \usebibmacro{newsdate}%
        \else%
        \usebibmacro{date}%
        \fi}%
       }%
       }%
  %\newunit
  }

\renewbibmacro*{volume+number+eid}{%%调整期刊卷和期的格式，源来自standard.bbx
  \printfield{volume}%
  %\setunit*{\adddot}%去掉点号
  %\printfield{number}%
  \iffieldundef{number}{}{\printtext{\mkbibparens{\printfield{number}}}}%增加一个圆括号
  \iffieldundef{eid}{}{%
  \setunit{\addcomma\space}%
  \printfield{eid}}}

\renewbibmacro*{note+pages}{%%调整页码前的标点和去掉期刊文章等页码后面的标点，源来自standard.bbx
  %\printfield{note}%不要note，note用来判断是否是报纸newspaper
  \iffieldundef{pages}{}{
  \setunit{\bibpagespunct}%
  \printfield{pages}}%
  %\newunit
  }

\renewbibmacro*{booktitle}{%%修改析出文献的文集的标题与附加标题间的符号
  \ifboolexpr{
    test {\iffieldundef{booktitle}}
    and
    test {\iffieldundef{booksubtitle}}
  }
    {}
    {\printtext[booktitle]{%
       \printfield[titlecase]{booktitle}%
       \setunit{\subtitlepunct}%
       \printfield[titlecase]{booksubtitle}}%
     \newunit%标点换成下一句
     \setunit{\subtitlepunct}}%
  \printfield{booktitleaddon}}

\renewbibmacro*{editor}{%%编者的符号修改一下，源来自biblatex.DEF
  \ifboolexpr{
    test \ifuseeditor
    and
    not test {\ifnameundef{editor}}
  }
    {\printnames{editor}%
    \iffieldundef{editortype}%增加一个类型判断，用于存在editortype的情况
    {\setunit\addspace}%当没有editortype时，直接用句点
    {\setunit{\addcomma\space}%
     \usebibmacro{editorstrg}}%
     \clearname{editor}}
    {}}

\renewbibmacro*{editorstrg}{%%编者类型做一修改，源来自biblatex.DEF
  \printtext[editortype]{%
    \iffieldundef{editortype}
      {
%      \ifboolexpr{ %这一段去掉
%         test {\ifnumgreater{\value{editor}}{1}}
%         or
%         test {\ifandothers{editor}}
%       }
%         {\bibstring{editors}}
%         {\bibstring{editor}}
         }
      {\ifbibxstring{\thefield{editortype}}
         {\ifboolexpr{
            test {\ifnumgreater{\value{editor}}{1}}
            or
            test {\ifandothers{editor}}
          }
            {\bibstring{\thefield{editortype}s}}
            {\bibstring{\thefield{editortype}}}}
         {\thefield{editortype}}}}}

\renewbibmacro*{periodical}{%%修改期刊的标题，源来自biblatex.DEF
  \iffieldundef{title}
    {}
    {\printtext[title]{%
       \printfield[titlecase]{title}%
       %\setunit{\subtitlepunct}%
       \ifboolexpr{test {\iffieldundef{subtitle}}}%这里增加了对子标题的判断，解决不判断多一个点的问题
       {}{\setunit{\subtitlepunct}
       \printfield[titlecase]{subtitle}}%
       %
       \iffieldundef{usera}{}{%在标题后直接给出文献标识字母
        \printfield[gbtypeflag]{usera}}
       }%把编组结束移到这里
       }%
       }

\renewbibmacro*{title+issuetitle}{%%期刊的标题做修改，源来自standard.BBX
  \usebibmacro{periodical}%
  %\setunit*{\addspace}%
  \setunit*{\adddot\addspace}%标点修改为句点
  \iffieldundef{series}
    {}
    {\newunit
     \printfield{series}%
     \setunit{\addspace}}%
  \usebibmacro{periodical+issue}%将issue调整到上面来，并修改
\iffieldundef{number}{}{%%进一步处理有范围的数字
  \multinumberparser{\thefield{number}}}%
  \iffieldundef{volume}%
  {\printfield{year}%
  \printtext{\mkbibparens{\multinumberfirst}}%
  \bibrangedash%
  \iffieldundef{endyear}{}{\printfield{endyear}\printtext{\mkbibparens{\multinumbersecond}}}%
  }%
  {\gbt@parse@range{\thefield{volume}}%
  \printfield{year}%
  \setunit{\addcomma\space}%将冒号修改为逗号
  \printtext{\gbt@range@first}%
  \printtext{\mkbibparens{\multinumberfirst}}%
  \bibrangedash%
  \iffieldundef{endyear}{}{%
  \printfield{endyear}%
  \setunit{\addcomma\space}%将冒号修改为逗号
  \printtext{\gbt@range@second}%
  \printtext{\mkbibparens{\multinumbersecond}}}%
  }%
  \setunit{\addcomma\space}%
  \printfield{eid}%
  \setunit{\addspace}%
  %\usebibmacro{issue+date}%
  %\setunit{\addcolon\space}%
  \usebibmacro{issue}%
  \newunit}

\newbibmacro*{periodical+issue}{%%新增一个样式用于调整期刊年份的格式，只打印年份
  \printtext{%去掉了[parens]
    \iffieldundef{issue}
      {%\usebibmacro{date}%修改为下一句
      }%
      {\printfield{issue}%
       \setunit*{\addspace}%
       %\usebibmacro{date}%修改为下一句
       }%
       }%
  %\newunit
}

\newbibmacro*{location+institution+date}{%%新增一个样式用于输出连续出版物的地址，单位，时间
\testCJKfirst{\thefield{title}}
\iflistundef{location}{\iftoggle{ifCJKforgbt}{\printtext[dropout]{[出版地不详]}}{\printtext[dropout]{[S.l.\adddot]}}}%
  {\printlist{location}}%
\addcolon\addspace%
\iflistundef{institution}{%
\iftoggle{ifCJKforgbt}{\printtext[dropout]{[出版者不详]}}{\printtext[dropout]{\mkbibbrackets{s.n.}}}}% \bibstring{nopublisher}%[s.n.\adddot]
{\printlist{institution}}%
\setunit{\addcomma\addspace}%
  %\usebibmacro{date}%
  \printfield{year}%
  \bibrangedash%
  \iffieldundef{endyear}{}{\printfield{endyear}}%
  \newunit}

\newbibmacro*{patenttitle}{%%重设专利title的输出，将文献类型标识符输出出去，原输出来自biblatex.def文件
  \ifboolexpr{%
    test{\iffieldundef{title}}%
    and%
    test{\iffieldundef{subtitle}}%
  }%
    {}%
    {\printtext[title]{%
       \printfield[titlecase]{title}%
       \ifboolexpr{test {\iffieldundef{subtitle}}}%这里增加了对子标题的判断，解决不判断多一个点的问题
       {}{\setunit{\subtitlepunct}%
       \printfield[titlecase]{subtitle}}%
       \iffieldundef{titleaddon}{}%判断一下titleaddon，否则直接加可能多一个空格
        {\setunit{\subtitlepunct}\printfield{titleaddon}}%
        \setunit{\subtitlepunct}\printfield{number}%写专利号
         \printfield[gbtypeflag]{usera}%
     %\iffieldundef{booktitle}{\newunit}{}%当title是析出时，不要标点
     %\newunit
     }%
}%
}

%=====================================================================
%设置驱动格式
\DeclareBibliographyDriver{book}{%%book条目类的驱动，源来自standard.bbx文件
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
\usebibmacro{author/editor+others/translator+others}%
\ifnameundef{author}{%这一段用于去除作者不存在时多出的标点
\ifnameundef{editor}{%
\ifnameundef{translator}{\relax}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}%这个注释去除标题前空格
\usebibmacro{maintitle+title}%
\newunit
\printlist{language}%
\newunit\newblock%
\usebibmacro{byauthor}%
\newunit%\newblock%
\usebibmacro{byeditor+others}%
\newunit\newblock%
\printfield{edition}%
\newunit%
\iffieldundef{maintitle}%
{\printfield{volume}%
\printfield{part}}%
{}%
\newunit%
\printfield{volumes}%
\newunit%\newblock%
\usebibmacro{series+number}%
\newunit%\newblock%
%\printfield{note}%
%\newunit\newblock%
\usebibmacro{publisher+location+date}%
%\newunit\newblock %这里标点去掉
\usebibmacro{chapter+pages}%
\usebibmacro{doi+eprint+url}%从下面移动到上面来，因为gbt2015的url需直接放在页码后面。
  \newunit%\newblock%
  %\newunit
  \printfield{pagetotal}%
  \newunit%\newblock%
  \iftoggle{bbx:isbn}
    {\printfield{isbn}}
    {}%
  \newunit%\newblock
  %\usebibmacro{doi+eprint+url}%
  %\newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}%\newblock
  \usebibmacro{pageref}%
  \newunit%\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareBibliographyDriver{inbook}{%%专著中的析出文献的格式修改，源来自standard.bbx
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author/translator+others}%
\ifnameundef{author}{%这一段用于去除作者不存在时多出的标点
\ifnameundef{editor}{%
\ifnameundef{translator}{\relax}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}%
%\setunit{\labelnamepunct}\newblock
\usebibmacro{title}%
%\nopunct
\printtext{\texttt{//}}%
%\texttt{//}
\usebibmacro{bybookauthor}%
\ifnameundef{bookauthor}{%\newblock
}{\newunit%\newblock
}%替换下一句
%\newunit\newblock
\usebibmacro{maintitle+booktitle}%
  \newunit\newblock
  \usebibmacro{byeditor+others}%
  \newunit%\newblock
  \printfield{edition}%
  \newunit
  \iffieldundef{maintitle}
    {\printfield{volume}%
     \printfield{part}}
    {}%
  \newunit
  \printfield{volumes}%
  \newunit%\newblock
  \usebibmacro{series+number}%
  \newunit%\newblock
  %\printfield{note}%
  %\newunit\newblock
  \usebibmacro{publisher+location+date}%
%\newunit\newblock
  \usebibmacro{chapter+pages}%
  \usebibmacro{doi+eprint+url}%移到上面来
  \newunit%\newblock
  \iftoggle{bbx:isbn}
    {\printfield{isbn}}
    {}%
  \newunit%\newblock
  %\usebibmacro{doi+eprint+url}%
%  \newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}%\newblock
  \usebibmacro{pageref}%
  \newunit%\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareBibliographyDriver{article}{%  %期刊文章，连续出版物中的析出文献的格式
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author/translator+others}%
  \setunit{\labelnamepunct}\newblock
  \usebibmacro{title}%
  \newunit
  \printlist{language}%
  \newunit\newblock
  \usebibmacro{byauthor}%
  \newunit%\newblock
  \usebibmacro{bytranslator+others}%
  \newunit%\newblock
  \printfield{version}%
  \newunit%\newblock
  %\usebibmacro{in:}% 不使用in来表示期刊等连续出版物
  \usebibmacro{journal+issuetitle}%
  %\newunit
%  \usebibmacro{byeditor+others}%
%  \newunit
  \usebibmacro{note+pages}%
  \usebibmacro{doi+eprint+url}%从后面移上来，调整url和页码之间的位置
  \newunit%\newblock
  \iftoggle{bbx:isbn}
    {\printfield{issn}}
    {}%
  \newunit%\newblock
  %\usebibmacro{doi+eprint+url}%
  %\newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}%\newblock
  \usebibmacro{pageref}%
  \newunit\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareBibliographyDriver{periodical}{%%修改连续出版物的驱动，源来自standard.BBX
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{editor}%
  %\setunit{\labelnamepunct}\newblock
  \newunit\newblock %删除上面一行，添加这一行
  \usebibmacro{title+issuetitle}%
  \newunit\newblock
  \usebibmacro{location+institution+date}%添加这一行用于输出地址，单位和时间
  \newunit%\newblock%添加这一行
  \printlist{language}%
  \newunit%\newblock
  \usebibmacro{byeditor}%
  \newunit%\newblock
  \printfield{note}%
  \newunit%\newblock
  \iftoggle{bbx:isbn}
    {\printfield{issn}}
    {}%
  \newunit%\newblock
  \usebibmacro{doi+eprint+url}%
  \newunit%\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}%\newblock
  \usebibmacro{pageref}%
  \newunit%\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareBibliographyDriver{patent}{%%处理专利文献，源来自standard.BBX
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author}%
  \setunit{\labelnamepunct}\newblock
  %\usebibmacro{title}%
  \usebibmacro{patenttitle}%给出专利专用的标题输出
  \newunit
  \printlist{language}%
  \newunit\newblock
  \usebibmacro{byauthor}%
  \newunit\newblock
  \printfield{type}%
  \setunit*{\addspace}%
  %\printfield{number}%
  \iflistundef{location}
    {}
    {\setunit*{\addspace}%
     \printtext[parens]{%
       \printlist[][-\value{listtotal}]{location}}}%
  \newunit\newblock
  \usebibmacro{byholder}%
  \newunit\newblock
  \printfield{note}%
  \newunit\newblock
  \usebibmacro{newsdate}%
  %\newunit\newblock
  \usebibmacro{doi+eprint+url}%
  \newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}\newblock
  \usebibmacro{pageref}%
  \newunit\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

\DeclareBibliographyDriver{online}{%%处理在线文献，源来自standard.BBX
  \usebibmacro{bibindex}%
  \usebibmacro{begentry}%
  \usebibmacro{author/editor+others/translator+others}%
  \ifnameundef{author}{%这一段用于去除作者不存在时多出的标点
\ifnameundef{editor}{%
\ifnameundef{translator}{\relax}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}}%
{\setunit{\labelnamepunct}\newblock}%
  %\setunit{\labelnamepunct}\newblock
  \usebibmacro{title}%
  \newunit
  \printlist{language}%
  \newunit\newblock
  \usebibmacro{byauthor}%
  \newunit\newblock
  \usebibmacro{byeditor+others}%
  \newunit\newblock
  \printfield{version}%
  \newunit
  \printfield{note}%
  \newunit\newblock
  \printlist{organization}%
  \newunit\newblock
  %\usebibmacro{date}%
  \usebibmacro{modifydate}%修改为带括号的时间
  \usebibmacro{url+urldate}%从下面移上来
  \newunit\newblock
  \iftoggle{bbx:eprint}
    {\usebibmacro{eprint}}
    {}%
  \newunit\newblock
  %\usebibmacro{url+urldate}%
  %\newunit\newblock
  \usebibmacro{addendum+pubstate}%
  \setunit{\bibpagerefpunct}\newblock
  \usebibmacro{pageref}%
  \newunit\newblock
  \iftoggle{bbx:related}
    {\usebibmacro{related:init}%
     \usebibmacro{related}}
    {}%
  \usebibmacro{finentry}}

%inbook类
\DeclareBibliographyAlias{incollection}{inbook}
\DeclareBibliographyAlias{inproceedings}{inbook}
%book类
\DeclareBibliographyAlias{proceedings}{book}
\DeclareBibliographyAlias{collection}{book}
\DeclareBibliographyAlias{unpublished}{book}
\DeclareBibliographyAlias{manual}{book}
\DeclareBibliographyAlias{report}{book}
\DeclareBibliographyAlias{thesis}{book}
